HW6 Resume Site

In this hw, you’ll work on your resume site. I'll be providing the starting HTML markup (index.html) so you can dive into the CSS right away. You can customize the content however you wish. But make sure to keep the HTML structure pretty much the same to be able to follow along with the exercises.

1.	Populate the index.html file
			a.	Take some time to customize your starter file and personalize the content.

2.  Make appropiate css and images folders to store and link files..

3.	Link external style sheet
            a.	In the head of your page, use the link element to link to the styles.css file. Be sure to remember to define the styles.css relationship as stylesheet.
            b. Do a quick test just to make sure that the files are linked together properly. An example can be setting the background color.

4. Pick a color pallete for your site. 
            a. Look online for a color pallete. 
            b. Copy and paste your color codes in the commented section in the styles.css file.
            c. In your styles.css file change the background color of each header, footer, work experience, and education section.
            d. Add classes as needed.
            e. Adjust font colors if needed

5.	Pick two Google Fonts and add them to your site (https://fonts.google.com/)
			a.	Go to the Google Fonts website explore and pick two web-safe fonts for your site
			b.	The fonts you select will be added to a collection in the selected families. 
			c. Copy the standard embed link. This should look familiar since it's using the same link tag we use to add our CSS file. This snippet will actually link to Google Style Sheet, and this is how the font families are loaded onto your webpage
            d. Add the code snippet to the head section of your index file and put it right before the styles.css file.
            e. Now that our new fonts are loaded into the page, set a new default font family back in styles.css for body, h1, h2, etc. 

6.  In your styles.css file
            a. adjust the font size of your h1 and h2 tags so that it stands out more accordingly. 
            b. feel free to play around with the font family, or font sizes of the other headings or body text, as you wish

7. Add some font-weight properties
            a. In the Google Fonts site go back and take a look at the options for selecting different typefaces and font weights. After you've selected your font choices open the drawer and go to this Customize tab. Here you'll see options for different font weights. You can choose as many as you'd like but the more you choose, the more resources your page has to load. So only add what you need.
            b. copy the new embed code and update it to your html file.















			HW7 Resume Site

In this hw, you’ll continue working on your resume site. You can continue buliding on from HW6.

1.	Update the index.html file
			a.	Let's update our projects by adding in the content wrappers. To keep the text from spanning across the whole page, starting with the header. Add the first new <div class="content-wrap"> just after the header tag. We want to make sure we enclose all of the content, but stay within the sections. It should contain all elements that the header contains.   

            b. Go back to the CSS now and add in this style in the global section. We're going to keep this style here in the global section, because it's going to be reused throughout the project. Give it a width: 950px; margin: 0 auto; 

2. Go back to your HTML and add that content wrapper to the rest of the page.
            a. Add one in the work section right after the section tag. Make sure that the closing tag encloses around the content. So it should be right before the closing section tag. 

            b. Add one in the education section and also the footer section. Also make sure you keep your HTML indented properly so that you can easily see where your opening and closing tags are. 

            c. save work and examine your results in chrome with different window sizings.
 
            d. To make the content wrapper flexible, but while still setting the width on the content, instead of using a width, we can use max-width instead. Let's go back to our CSS file and make that update. In the content-wrap selector update remove the width property with max-width: 950px;

3. Practice with padding and spacing.
            a. Still in the .content-wrap selector add some padding. I'm going to go with one value 50 pixels, (padding: 50px;). By adding padding to the content wrap, all the page sections using this class will have the same amount of padding. And this will help to keep your designs more consistent.

            b. Now you may notice that while we added the same amount of padding around the entire content wrapper, there's a small difference in the amount of space between the top of the wrapper and the bottom. And that's because there is margin around the heading element. Remove the margin at the top, so that the wrapper padding is more consistent.

            c. . Back in your CSS file, find your h2 selector, and we're going to set the margin-top to zero (margin-top: 0;). And that's going to remove the margin space, just from the top of the element. Save it, refresh it, check it in the browser.
            
            d. Next, let's address the white border around the entire page. You could see it on the left, on the bottom, the right side, and the top. Just like the spacing between the sections, this is coming from the default margin as well, but from the body element, and that's why it's wrapping the entire page. So let's go ahead and remove that. Back in your CSS file, find your body selector and set the margin to zero (margin: 0;). Now the white space is gone and the background colors span all the way across
        
            e. Let's go back to the footer. We should probably add some space in between these links. Also, longer blocks of text are usually easier to read when it's left align, but since there's not much content here, let's also center align the text. Back in our CSS file, let's go down to the footer section. Use footer as your selector add the property (text-align: center). Save it, and refresh your browser. By adding text-align center to the footer, all of the child elements within have inherited the style.

            f. Back in our HTML file, to make sure that we add the styles only to the links within the footer, we're going to add a class to this div that's containing all the links. After the h2 tag that says "Let's Keep in Touch!" Add a <div class="contact-info">. This div should contain all the anchor tags.
            
            g. Back in the CSS file, Create a new declaration block, and name it (.contact-info a{} ) I'm also going to apply these styles to the links, so I'm using a descendant selector, a to target the links inside of the contact-info class. Inside that selector set  the values of (padding: 10px; display: inline-block;) I'm going to choose the value of inline-block, because I still want these elements to align side by side, in a line, but I also wanted to apply the padding properly, like block level elements.

4. Practicing with floats in the header
            a. So the first thing we're going to focus on is the profile image. Something to note, images can be resized with CSS, but it's best to crop the file to the size that you need it to be. The larger the image, the more bandwidth the browser will use to load it. In the CSS, let's set the width and height of our profile image to 300 pixels.

            b. In the HTML add a class inside the image tag and name it profile-img. That way you can make sure to target only this image in the CSS. Also add it to the header section in your CSS (.profile-img{}). Inside that selector set the (width: 300px;). You don't need to set the height, because by setting the width, the height will automatically adjust to maintain the aspect ratio of the image. Go ahead and save the file and check your changes in the browser.

            c. Add one more CSS style to .profile-image selector called border-radius give it a value of 50%. (border-radius:50%;) Save it and go back to the browser.

            d. The next thing we're going to do is tighten up the header design by removing some margins. I want the h1 name  and the h2 tagline to be closer together so remove the margin from both of these h1s and h2 headings. Back in your CSS go to your header h1, header h2 selector and add (margin: 0;) there. Go ahead and go back to the browser and check for your changes.

            e. Float the text around the image, add a float: left to the profile-img selector.

            f. Add the overflow property to the content-wrap selector. Use the value of hidden.

            g. Add a little bit of margin on the right side of your image, just to put some space between it and the text. Back in the profile-img selector, add (margin-right: 30 px). Save and go back to the browser and check for your changes. 

5. Add the box model fix
            a. Let's add the box model fix. Use the snippet from the lecture and add it to your CSS file. This is going to go at the very top of your style sheet. Add it to the global section since this style is applied to every single element on the page.

6. Add some columns to your page
            a. The first step is to put a box around all of the text elements to group them as one component. Let's go back to the HTML file. We'll use a div tag to create the container because this is only for styling purposes. And we'll add a class as well. We're going to be creating two columns, so we can call it column-narrow and column-wide. You'll be using these column styles again to align the content in the work experience section. So this is going to be a reusable style.
            
            b. In the HTML add a class of column-narrow to your img tag.
            
            c. add a new <div class="column-wide"> that contains the h1, h2, and paragraph tags in your header section. 
            
            d. In your CSS set the style properties for the newly added .column-narrow selector to width: 30%; float left; padding-right: 3%; min-height 175px;
            
            e. Set the style properties for the newly added .column-wide to width: 70%; float left; min-height: 225px;
            
            f. remove or comment out the width, float, and margin values from the profile-img selector. Since we'll be using these new global column styles instead to align the content. You can keep the border-radius: 50%; property. 
            
            g. Back in your html file add divs and classes to your Work Experince section to apply our new styling.
                i. add a new <div class="column-narrow"> that contatins the h3 Job tile, p Company Name, and p Date at job tags in your Job Details section. 
                ii. add a new <div class="column-wide"> that contatins the p Job summary, p Optional list, and the ul tags in you Job Details section. 
                iii. make sure to add that to all your job items.. 
































HW8 Resume Site

In this hw, you’ll continue working on your resume site. You can continue buliding on from HW6&7.

1.	Add a navigation menu to your resume site.
			      a.	For this HW add a navigation menu without using a list. An example of this is can be found in the lecture material. 

            b. Each item in the menu should link to a specific section of your resume.

            c. The menu should stay at the top of your site even when you scroll down.

            d. Add a menu item to your nav menu that links to a pdf version of your resume to download.   

2. Add some font icons to your footer.
            a. Use fontawesome to add some font icons to your contact info. Some examples are shown in the lecture material..

3. Add a background image to one of your resume sections.
            a. Make use of the RGB and Alpha transparency to add a gradiant to your image. Some examples are shown in the lecture material.